{"ast":null,"code":"import _slicedToArray from \"/home/gian/TableMeal/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/gian/TableMeal/frontend/src/pages/Orders/index.js\";\nimport React, { useEffect, useState } from 'react';\nimport api from '../../services/api';\nimport NavBar from '../Navbar';\nimport logo from '../../assets/logo.png';\nimport './styles.css';\nexport default function Order({\n  history\n}) {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        orders = _useState2[0],\n        setOrders = _useState2[1];\n\n  useEffect(() => {\n    async function loadOrders() {\n      const user_id = sessionStorage.getItem('user');\n      const response = await api.get('/order', {\n        headers: {\n          user_id\n        }\n      });\n      console.log(response.data);\n      setOrders(response.data);\n    }\n\n    loadOrders();\n  }, []);\n\n  async function statusOrder(name) {\n    const newFoods = orders.filter(food => {\n      return food.name !== name;\n    });\n    setOrders(newFoods);\n    const response = await api.delete('/food', {\n      params: {\n        name: name\n      }\n    });\n    console.log(response);\n  }\n\n  function menu() {\n    history.push('/');\n  }\n\n  function sair() {\n    history.push('/login');\n  }\n\n  function cardapio() {\n    history.push('/food');\n  }\n\n  function pedidos() {\n    history.push('/orders');\n  }\n\n  return React.createElement(React.Fragment, null, React.createElement(NavBar, {\n    menu: () => menu(),\n    sair: () => sair(),\n    cardapio: () => cardapio(),\n    pedidos: () => pedidos(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"content2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(\"table\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, \"Prato\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, \"Mesa\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, \"Status\")), orders.map(order => React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, order.foods.map(food => food.name + \",\")), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, order.table), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(\"select\", {\n    id: \"type\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    value: \"Aguardando\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, \"Aguardando...\"), React.createElement(\"option\", {\n    value: \"Pedido Enviado!\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, \"Enviar Pedido\"))))))));\n}","map":{"version":3,"sources":["/home/gian/TableMeal/frontend/src/pages/Orders/index.js"],"names":["React","useEffect","useState","api","NavBar","logo","Order","history","orders","setOrders","loadOrders","user_id","sessionStorage","getItem","response","get","headers","console","log","data","statusOrder","name","newFoods","filter","food","delete","params","menu","push","sair","cardapio","pedidos","map","order","foods","table"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport api from '../../services/api';\nimport NavBar from '../Navbar'\nimport logo from '../../assets/logo.png'\nimport './styles.css'\n\n\nexport default function Order({ history }) {\n    const [orders, setOrders] = useState([]);\n    useEffect(() => {\n        async function loadOrders() {\n            const user_id = sessionStorage.getItem('user');\n            const response = await api.get('/order', {\n                headers: { user_id }\n            });\n            console.log(response.data);\n            setOrders(response.data);\n        }\n        loadOrders();\n    }, []);\n\n    async function statusOrder(name) {\n        const newFoods = orders.filter((food) => {\n            return food.name !== name;\n        });\n        setOrders(newFoods);\n        const response = await api.delete('/food', {\n            params: {\n                name: name\n            }\n        });\n        console.log(response);\n    }\n\n    function menu() {\n        history.push('/');\n    }\n    function sair() {\n        history.push('/login');\n    }\n    function cardapio() {\n        history.push('/food');\n    }\n    function pedidos() {\n        history.push('/orders');\n    }\n\n    return (\n        <>\n            <NavBar menu={() => menu()} sair={() => sair()} cardapio={() => cardapio()} pedidos={() => pedidos()} />\n            <div className=\"content2\">\n                <table>\n                    <tr>\n                        <th>Prato</th>\n                        <th>Mesa</th>\n                        <th>Status</th>\n                    </tr>\n                    {orders.map((order) => (\n                        <tr>\n                            <td>{order.foods.map((food) => (food.name + \",\"))}</td>\n                            <td>{order.table}</td>\n                            <td>\n                                <select id=\"type\"  >\n                                    <option value=\"Aguardando\">Aguardando...</option>\n                                    <option value=\"Pedido Enviado!\">Enviar Pedido</option>\n                                </select>\n                            </td>\n                        </tr>\n                    ))}\n                </table>\n\n            </div>\n        </>\n    )\n\n\n}"]},"metadata":{},"sourceType":"module"}