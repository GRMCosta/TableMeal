{"ast":null,"code":"import _slicedToArray from \"/home/gianraphael/Udemy/TableMeal/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/gianraphael/Udemy/TableMeal/frontend/src/pages/New/index.js\";\nimport React, { useState, useMemo } from 'react';\nimport api from '../../services/api';\nimport camera from \"../../assets/photo-camera.svg\";\nimport './styles.css';\nexport default function New({\n  history\n}) {\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        name = _useState2[0],\n        setName = _useState2[1];\n\n  const _useState3 = useState(''),\n        _useState4 = _slicedToArray(_useState3, 2),\n        price = _useState4[0],\n        setPrice = _useState4[1];\n\n  const _useState5 = useState(''),\n        _useState6 = _slicedToArray(_useState5, 2),\n        description = _useState6[0],\n        setDescription = _useState6[1];\n\n  const _useState7 = useState(''),\n        _useState8 = _slicedToArray(_useState7, 2),\n        type = _useState8[0],\n        setType = _useState8[1];\n\n  const _useState9 = useState(''),\n        _useState10 = _slicedToArray(_useState9, 2),\n        thumbnail = _useState10[0],\n        setThumbnail = _useState10[1];\n\n  const preview = useMemo(() => {\n    return thumbnail ? URL.createObjectURL(thumbnail) : null;\n  }, [thumbnail]);\n\n  async function handleSubmit(event) {\n    event.preventDefault();\n    const data = new FormData();\n    const user_id = localStorage.getItem('user');\n    data.append('thumbnail', thumbnail);\n    data.append('name', name);\n    data.append('price', price);\n    data.append('description', description);\n    data.append('type', type);\n    await api.post('/food', data, {\n      headers: {\n        user_id\n      }\n    });\n    history.push('/dashboard');\n  }\n\n  return React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    id: \"thumbnail\",\n    style: {\n      backgroundImage: \"url(\".concat(preview, \")\")\n    },\n    className: thumbnail ? 'has-thumbnail' : '',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"file\",\n    onChange: event => setThumbnail(event.target.files[0]),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }), React.createElement(\"img\", {\n    src: camera,\n    alt: \"Select img\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  })), React.createElement(\"label\", {\n    htmlFor: \"name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, \"NOME DO PRATO *\"), React.createElement(\"input\", {\n    id: \"name\",\n    placeholder: \"Prato\",\n    value: name,\n    onChange: event => setName(event.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    htmlFor: \"price\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, \"PRE\\xC7O *\"), React.createElement(\"input\", {\n    id: \"price\",\n    placeholder: \"Pre\\xE7o\",\n    value: price,\n    onChange: event => setPrice(event.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    htmlFor: \"price\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, \"DESCRI\\xC7\\xC3O *\"), React.createElement(\"input\", {\n    id: \"description\",\n    placeholder: \"Descri\\xE7\\xE3o\",\n    value: description,\n    onChange: event => setDescription(event.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    htmlFor: \"type\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, \"TIPO *\"), React.createElement(\"input\", {\n    id: \"type\",\n    placeholder: \"Tipo\",\n    value: type,\n    onChange: event => setType(event.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"btn\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, \"Cadastrar Prato\"));\n}","map":{"version":3,"sources":["/home/gianraphael/Udemy/TableMeal/frontend/src/pages/New/index.js"],"names":["React","useState","useMemo","api","New","history","name","setName","price","setPrice","description","setDescription","type","setType","thumbnail","setThumbnail","preview","URL","createObjectURL","handleSubmit","event","preventDefault","data","FormData","user_id","localStorage","getItem","append","post","headers","push","backgroundImage","target","files","camera","value"],"mappings":"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","sourcesContent":["import React, {useState, useMemo} from 'react';\nimport api from '../../services/api';\n\n\nimport camera from '../../assets/photo-camera.svg';\n\nimport './styles.css'\n\nexport default function New({history}){\n    const [name, setName] = useState('');\n    const [price, setPrice] = useState('');\n    const [description, setDescription] = useState('');\n    const [type, setType] = useState('');\n    const [thumbnail , setThumbnail] = useState('');\n\n    const preview = useMemo(() => {\n        return thumbnail ? URL.createObjectURL(thumbnail) : null;\n    },[thumbnail]\n    )\n\n    async function handleSubmit(event){\n        event.preventDefault();\n\n        const data = new FormData();\n        const user_id = localStorage.getItem('user');\n\n        data.append('thumbnail', thumbnail);\n        data.append('name', name);\n        data.append('price', price);\n        data.append('description', description);\n        data.append('type', type);\n\n        await api.post('/food', data, {\n            headers: {user_id}\n        })\n\n        history.push('/dashboard');\n    }\n    return (\n        <form onSubmit={handleSubmit}>\n            <label id=\"thumbnail\" style={{ backgroundImage: `url(${preview})`}}\n            className={thumbnail ? 'has-thumbnail' : ''}\n            >\n                <input type=\"file\" \n                onChange={event => setThumbnail(event.target.files[0])}\n                />\n                <img src={camera} alt=\"Select img\"/>\n            </label>\n\n            <label htmlFor=\"name\">NOME DO PRATO *</label>\n            <input \n            id=\"name\"\n            placeholder=\"Prato\"\n            value={name}\n            onChange={event => setName(event.target.value)}\n            />\n\n            <label htmlFor=\"price\">PREÃ‡O *</label>\n            <input \n                id=\"price\"\n                 placeholder=\"PreÃ§o\"\n                value={price}\n                onChange={event => setPrice(event.target.value)}\n            />\n\n            <label htmlFor=\"price\">DESCRIÃ‡ÃƒO *</label>\n            <input \n                id=\"description\"\n                 placeholder=\"DescriÃ§Ã£o\"\n                value={description}\n                onChange={event => setDescription(event.target.value)}\n            />\n\n            <label htmlFor=\"type\">TIPO *</label>\n            <input \n                id=\"type\"\n                 placeholder=\"Tipo\"\n                value={type}\n                onChange={event => setType(event.target.value)}\n            />\n            <button type=\"submit\" className=\"btn\">Cadastrar Prato</button>\n        </form>\n    )\n}"]},"metadata":{},"sourceType":"module"}